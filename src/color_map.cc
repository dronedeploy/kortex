// ---------------------------------------------------------------------------
//
// This file is part of the <kortex> library suite
//
// Copyright (C) 2015 Engin Tola
//
// See LICENSE file for license information.
//
// author: Engin Tola
// e-mail: engintola@gmail.com
// web   : http://www.engintola.com
// web   : http://www.aurvis.com
//
// ---------------------------------------------------------------------------

#include <kortex/color_map.h>
#include <kortex/string.h>
#include <kortex/check.h>

namespace kortex {

    ColorMap::ColorMap() {
        m_type = "jet";
        m_types.push_back( string("jet") );
        m_types.push_back( string("hot") );
        m_types.push_back( string("winter") );
        m_types.push_back( string("hsv") );

        set_type( 0 );

        m_step_size = 1.0f / float(m_arr_sz-1);
    }

    int ColorMap::n_types() const {
        return m_types.size();
    }

    void ColorMap::set_type( int tid ) {
        assert_boundary( tid, 0, n_types() );
        m_type = m_types[tid];
        switch(tid) {
        case 0:
            m_arr = g_colormap_jet;
            break;
        case 1:
            m_arr = g_colormap_hot;
            break;
        case 2:
            m_arr = g_colormap_winter;
            break;
        case 3:
            m_arr = g_colormap_hsv;
            break;
        }
    }

    void ColorMap::set_type( const string& t ) {
        for( int i=0; i<n_types(); i++ ) {
            if( !compare_string_nc( t, m_types[i] ) ) {
                set_type( i );
                return;
            }
        }
        logman_warning_g( "type [%s] not found", t.c_str() );
    }

    void ColorMap::print_types() const {
        for( int i=0; i<n_types(); i++ ) {
            printf( "%d : %s\n", i, m_types[i].c_str() );
        }
    }

    void ColorMap::get_color( const float& gray, float& red, float& green, float& blue ) const {
        if( gray < 0.0f || gray > 1.0f ) {
            logman_warning_g( "supporting only gray values [0,1] [g %f]", gray );
            red   = 1.0f;
            green = 1.0f;
            blue  = 1.0f;
        } else {
            int   ib    = int(gray / m_step_size);
            int   ia    = ib+1; if( ia >= m_arr_sz ) ia--;
            float beta  = gray/m_step_size - ib;
            float alpha = 1.0f - beta;
            assert_statement( beta >= 0.0f && beta <= 1.0f, "invalid beta" );

            float r0 = m_arr[ 3*ib   ];
            float g0 = m_arr[ 3*ib+1 ];
            float b0 = m_arr[ 3*ib+2 ];
            float r1 = m_arr[ 3*ia   ];
            float g1 = m_arr[ 3*ia+1 ];
            float b1 = m_arr[ 3*ia+2 ];

            red   = alpha * r0 + beta * r1;
            green = alpha * g0 + beta * g1;
            blue  = alpha * b0 + beta * b1;
        }
    }

    float g_colormap_hot[] = {
        0.0417,         0,         0,
        0.0833,         0,         0,
        0.1250,         0,         0,
        0.1667,         0,         0,
        0.2083,         0,         0,
        0.2500,         0,         0,
        0.2917,         0,         0,
        0.3333,         0,         0,
        0.3750,         0,         0,
        0.4167,         0,         0,
        0.4583,         0,         0,
        0.5000,         0,         0,
        0.5417,         0,         0,
        0.5833,         0,         0,
        0.6250,         0,         0,
        0.6667,         0,         0,
        0.7083,         0,         0,
        0.7500,         0,         0,
        0.7917,         0,         0,
        0.8333,         0,         0,
        0.8750,         0,         0,
        0.9167,         0,         0,
        0.9583,         0,         0,
        1.0000,         0,         0,
        1.0000,    0.0417,         0,
        1.0000,    0.0833,         0,
        1.0000,    0.1250,         0,
        1.0000,    0.1667,         0,
        1.0000,    0.2083,         0,
        1.0000,    0.2500,         0,
        1.0000,    0.2917,         0,
        1.0000,    0.3333,         0,
        1.0000,    0.3750,         0,
        1.0000,    0.4167,         0,
        1.0000,    0.4583,         0,
        1.0000,    0.5000,         0,
        1.0000,    0.5417,         0,
        1.0000,    0.5833,         0,
        1.0000,    0.6250,         0,
        1.0000,    0.6667,         0,
        1.0000,    0.7083,         0,
        1.0000,    0.7500,         0,
        1.0000,    0.7917,         0,
        1.0000,    0.8333,         0,
        1.0000,    0.8750,         0,
        1.0000,    0.9167,         0,
        1.0000,    0.9583,         0,
        1.0000,    1.0000,         0,
        1.0000,    1.0000,    0.0625,
        1.0000,    1.0000,    0.1250,
        1.0000,    1.0000,    0.1875,
        1.0000,    1.0000,    0.2500,
        1.0000,    1.0000,    0.3125,
        1.0000,    1.0000,    0.3750,
        1.0000,    1.0000,    0.4375,
        1.0000,    1.0000,    0.5000,
        1.0000,    1.0000,    0.5625,
        1.0000,    1.0000,    0.6250,
        1.0000,    1.0000,    0.6875,
        1.0000,    1.0000,    0.7500,
        1.0000,    1.0000,    0.8125,
        1.0000,    1.0000,    0.8750,
        1.0000,    1.0000,    0.9375,
        1.0000,    1.0000,    1.0000
    };

    float g_colormap_jet[] = {
        0,         0,    0.5625,
        0,         0,    0.6250,
        0,         0,    0.6875,
        0,         0,    0.7500,
        0,         0,    0.8125,
        0,         0,    0.8750,
        0,         0,    0.9375,
        0,         0,    1.0000,
        0,    0.0625,    1.0000,
        0,    0.1250,    1.0000,
        0,    0.1875,    1.0000,
        0,    0.2500,    1.0000,
        0,    0.3125,    1.0000,
        0,    0.3750,    1.0000,
        0,    0.4375,    1.0000,
        0,    0.5000,    1.0000,
        0,    0.5625,    1.0000,
        0,    0.6250,    1.0000,
        0,    0.6875,    1.0000,
        0,    0.7500,    1.0000,
        0,    0.8125,    1.0000,
        0,    0.8750,    1.0000,
        0,    0.9375,    1.0000,
        0,    1.0000,    1.0000,
        0.0625,    1.0000,    0.9375,
        0.1250,    1.0000,    0.8750,
        0.1875,    1.0000,    0.8125,
        0.2500,    1.0000,    0.7500,
        0.3125,    1.0000,    0.6875,
        0.3750,    1.0000,    0.6250,
        0.4375,    1.0000,    0.5625,
        0.5000,    1.0000,    0.5000,
        0.5625,    1.0000,    0.4375,
        0.6250,    1.0000,    0.3750,
        0.6875,    1.0000,    0.3125,
        0.7500,    1.0000,    0.2500,
        0.8125,    1.0000,    0.1875,
        0.8750,    1.0000,    0.1250,
        0.9375,    1.0000,    0.0625,
        1.0000,    1.0000,         0,
        1.0000,    0.9375,         0,
        1.0000,    0.8750,         0,
        1.0000,    0.8125,         0,
        1.0000,    0.7500,         0,
        1.0000,    0.6875,         0,
        1.0000,    0.6250,         0,
        1.0000,    0.5625,         0,
        1.0000,    0.5000,         0,
        1.0000,    0.4375,         0,
        1.0000,    0.3750,         0,
        1.0000,    0.3125,         0,
        1.0000,    0.2500,         0,
        1.0000,    0.1875,         0,
        1.0000,    0.1250,         0,
        1.0000,    0.0625,         0,
        1.0000,         0,         0,
        0.9375,         0,         0,
        0.8750,         0,         0,
        0.8125,         0,         0,
        0.7500,         0,         0,
        0.6875,         0,         0,
        0.6250,         0,         0,
        0.5625,         0,         0,
        0.5000,         0,         0
    };

    float g_colormap_winter[] = {
        0,         0,    1.0000,
        0,    0.0159,    0.9921,
        0,    0.0317,    0.9841,
        0,    0.0476,    0.9762,
        0,    0.0635,    0.9683,
        0,    0.0794,    0.9603,
        0,    0.0952,    0.9524,
        0,    0.1111,    0.9444,
        0,    0.1270,    0.9365,
        0,    0.1429,    0.9286,
        0,    0.1587,    0.9206,
        0,    0.1746,    0.9127,
        0,    0.1905,    0.9048,
        0,    0.2063,    0.8968,
        0,    0.2222,    0.8889,
        0,    0.2381,    0.8810,
        0,    0.2540,    0.8730,
        0,    0.2698,    0.8651,
        0,    0.2857,    0.8571,
        0,    0.3016,    0.8492,
        0,    0.3175,    0.8413,
        0,    0.3333,    0.8333,
        0,    0.3492,    0.8254,
        0,    0.3651,    0.8175,
        0,    0.3810,    0.8095,
        0,    0.3968,    0.8016,
        0,    0.4127,    0.7937,
        0,    0.4286,    0.7857,
        0,    0.4444,    0.7778,
        0,    0.4603,    0.7698,
        0,    0.4762,    0.7619,
        0,    0.4921,    0.7540,
        0,    0.5079,    0.7460,
        0,    0.5238,    0.7381,
        0,    0.5397,    0.7302,
        0,    0.5556,    0.7222,
        0,    0.5714,    0.7143,
        0,    0.5873,    0.7063,
        0,    0.6032,    0.6984,
        0,    0.6190,    0.6905,
        0,    0.6349,    0.6825,
        0,    0.6508,    0.6746,
        0,    0.6667,    0.6667,
        0,    0.6825,    0.6587,
        0,    0.6984,    0.6508,
        0,    0.7143,    0.6429,
        0,    0.7302,    0.6349,
        0,    0.7460,    0.6270,
        0,    0.7619,    0.6190,
        0,    0.7778,    0.6111,
        0,    0.7937,    0.6032,
        0,    0.8095,    0.5952,
        0,    0.8254,    0.5873,
        0,    0.8413,    0.5794,
        0,    0.8571,    0.5714,
        0,    0.8730,    0.5635,
        0,    0.8889,    0.5556,
        0,    0.9048,    0.5476,
        0,    0.9206,    0.5397,
        0,    0.9365,    0.5317,
        0,    0.9524,    0.5238,
        0,    0.9683,    0.5159,
        0,    0.9841,    0.5079,
        0,    1.0000,    0.5000
    };

    float g_colormap_hsv[] = {
        1.0000,         0,         0,
        1.0000,    0.0938,         0,
        1.0000,    0.1875,         0,
        1.0000,    0.2812,         0,
        1.0000,    0.3750,         0,
        1.0000,    0.4688,         0,
        1.0000,    0.5625,         0,
        1.0000,    0.6562,         0,
        1.0000,    0.7500,         0,
        1.0000,    0.8438,         0,
        1.0000,    0.9375,         0,
        0.9688,    1.0000,         0,
        0.8750,    1.0000,         0,
        0.7812,    1.0000,         0,
        0.6875,    1.0000,         0,
        0.5938,    1.0000,         0,
        0.5000,    1.0000,         0,
        0.4062,    1.0000,         0,
        0.3125,    1.0000,         0,
        0.2188,    1.0000,         0,
        0.1250,    1.0000,         0,
        0.0312,    1.0000,         0,
        0,    1.0000,    0.0625,
        0,    1.0000,    0.1562,
        0,    1.0000,    0.2500,
        0,    1.0000,    0.3438,
        0,    1.0000,    0.4375,
        0,    1.0000,    0.5312,
        0,    1.0000,    0.6250,
        0,    1.0000,    0.7188,
        0,    1.0000,    0.8125,
        0,    1.0000,    0.9062,
        0,    1.0000,    1.0000,
        0,    0.9062,    1.0000,
        0,    0.8125,    1.0000,
        0,    0.7188,    1.0000,
        0,    0.6250,    1.0000,
        0,    0.5312,    1.0000,
        0,    0.4375,    1.0000,
        0,    0.3438,    1.0000,
        0,    0.2500,    1.0000,
        0,    0.1562,    1.0000,
        0,    0.0625,    1.0000,
        0.0312,         0,    1.0000,
        0.1250,         0,    1.0000,
        0.2188,         0,    1.0000,
        0.3125,         0,    1.0000,
        0.4062,         0,    1.0000,
        0.5000,         0,    1.0000,
        0.5938,         0,    1.0000,
        0.6875,         0,    1.0000,
        0.7812,         0,    1.0000,
        0.8750,         0,    1.0000,
        0.9688,         0,    1.0000,
        1.0000,         0,    0.9375,
        1.0000,         0,    0.8438,
        1.0000,         0,    0.7500,
        1.0000,         0,    0.6562,
        1.0000,         0,    0.5625,
        1.0000,         0,    0.4688,
        1.0000,         0,    0.3750,
        1.0000,         0,    0.2812,
        1.0000,         0,    0.1875,
        1.0000,         0,    0.0938
    };





}

