// ---------------------------------------------------------------------------
//
// This file is part of the <kortex> library suite
//
// Copyright (C) 2015 Engin Tola
//
// See LICENSE file for license information.
//
// author: Engin Tola
// e-mail: engintola@gmail.com
// web   : http://www.engintola.com
// web   : http://www.aurvis.com
//
// ---------------------------------------------------------------------------

#include <kortex/color_map.h>
#include <kortex/string.h>
#include <kortex/check.h>

namespace kortex {

    ColorMap::ColorMap() {
        m_type = "jet";
        m_types.push_back( string("jet") );
        m_types.push_back( string("hot") );
        m_types.push_back( string("winter") );
        m_types.push_back( string("hsv") );
        m_types.push_back( string("cool") );

        set_type( 0 );

        m_step_size = 1.0f / float(m_arr_sz-1);
    }

    int ColorMap::n_types() const {
        return (int)m_types.size();
    }

    void ColorMap::set_type( int tid ) {
        assert_boundary( tid, 0, n_types() );
        m_type = m_types[tid];
        switch(tid) {
        case 0:
            m_arr = g_colormap_jet;
            break;
        case 1:
            m_arr = g_colormap_hot;
            break;
        case 2:
            m_arr = g_colormap_winter;
            break;
        case 3:
            m_arr = g_colormap_hsv;
            break;
        case 4:
            m_arr = g_colormap_cool;
            break;
        }
    }

    void ColorMap::set_type( const string& t ) {
        for( int i=0; i<n_types(); i++ ) {
            if( !compare_string_nc( t, m_types[i] ) ) {
                set_type( i );
                return;
            }
        }
        logman_warning_g( "type [%s] not found", t.c_str() );
    }

    void ColorMap::print_types() const {
        for( int i=0; i<n_types(); i++ ) {
            printf( "%d : %s\n", i, m_types[i].c_str() );
        }
    }

    void ColorMap::get_color( const float& gray, float& red, float& green, float& blue ) const {
        if( gray < 0.0f || gray > 1.0f ) {
            logman_warning_g( "supporting only gray values [0,1] [g %f]", gray );
            red   = 1.0f;
            green = 1.0f;
            blue  = 1.0f;
        } else {
            int   ib    = int(gray / m_step_size);
            int   ia    = ib+1; if( ia >= m_arr_sz ) ia--;
            float beta  = gray/m_step_size - float(ib);
            float alpha = 1.0f - beta;
            assert_statement( beta >= 0.0f && beta <= 1.0f, "invalid beta" );

            float r0 = m_arr[ 3*ib   ];
            float g0 = m_arr[ 3*ib+1 ];
            float b0 = m_arr[ 3*ib+2 ];
            float r1 = m_arr[ 3*ia   ];
            float g1 = m_arr[ 3*ia+1 ];
            float b1 = m_arr[ 3*ia+2 ];

            red   = alpha * r0 + beta * r1;
            green = alpha * g0 + beta * g1;
            blue  = alpha * b0 + beta * b1;
        }
    }

    float g_colormap_hot[] = {
        0.0417f,    0.0f,            0.0f,
        0.0833f,    0.0f,            0.0f,
        0.1250f,    0.0f,            0.0f,
        0.1667f,    0.0f,            0.0f,
        0.2083f,    0.0f,            0.0f,
        0.2500f,    0.0f,            0.0f,
        0.2917f,    0.0f,            0.0f,
        0.3333f,    0.0f,            0.0f,
        0.3750f,    0.0f,            0.0f,
        0.4167f,    0.0f,            0.0f,
        0.4583f,    0.0f,            0.0f,
        0.5000f,    0.0f,            0.0f,
        0.5417f,    0.0f,            0.0f,
        0.5833f,    0.0f,            0.0f,
        0.6250f,    0.0f,            0.0f,
        0.6667f,    0.0f,            0.0f,
        0.7083f,    0.0f,            0.0f,
        0.7500f,    0.0f,            0.0f,
        0.7917f,    0.0f,            0.0f,
        0.8333f,    0.0f,            0.0f,
        0.8750f,    0.0f,            0.0f,
        0.9167f,    0.0f,            0.0f,
        0.9583f,    0.0f,            0.0f,
        1.0000f,    0.0f,            0.0f,
        1.0000f,    0.0417f,         0.0f,
        1.0000f,    0.0833f,         0.0f,
        1.0000f,    0.1250f,         0.0f,
        1.0000f,    0.1667f,         0.0f,
        1.0000f,    0.2083f,         0.0f,
        1.0000f,    0.2500f,         0.0f,
        1.0000f,    0.2917f,         0.0f,
        1.0000f,    0.3333f,         0.0f,
        1.0000f,    0.3750f,         0.0f,
        1.0000f,    0.4167f,         0.0f,
        1.0000f,    0.4583f,         0.0f,
        1.0000f,    0.5000f,         0.0f,
        1.0000f,    0.5417f,         0.0f,
        1.0000f,    0.5833f,         0.0f,
        1.0000f,    0.6250f,         0.0f,
        1.0000f,    0.6667f,         0.0f,
        1.0000f,    0.7083f,         0.0f,
        1.0000f,    0.7500f,         0.0f,
        1.0000f,    0.7917f,         0.0f,
        1.0000f,    0.8333f,         0.0f,
        1.0000f,    0.8750f,         0.0f,
        1.0000f,    0.9167f,         0.0f,
        1.0000f,    0.9583f,         0.0f,
        1.0000f,    1.0000f,         0.0f,
        1.0000f,    1.0000f,    0.0625f,
        1.0000f,    1.0000f,    0.1250f,
        1.0000f,    1.0000f,    0.1875f,
        1.0000f,    1.0000f,    0.2500f,
        1.0000f,    1.0000f,    0.3125f,
        1.0000f,    1.0000f,    0.3750f,
        1.0000f,    1.0000f,    0.4375f,
        1.0000f,    1.0000f,    0.5000f,
        1.0000f,    1.0000f,    0.5625f,
        1.0000f,    1.0000f,    0.6250f,
        1.0000f,    1.0000f,    0.6875f,
        1.0000f,    1.0000f,    0.7500f,
        1.0000f,    1.0000f,    0.8125f,
        1.0000f,    1.0000f,    0.8750f,
        1.0000f,    1.0000f,    0.9375f,
        1.0000f,    1.0000f,    1.0000f
    };

    float g_colormap_jet[] = {
        0.0f,      0.0f,    0.5625f,
        0.0f,      0.0f,    0.6250f,
        0.0f,         0.0f,    0.6875f,
        0.0f,         0.0f,    0.7500f,
        0.0f,         0.0f,    0.8125f,
        0.0f,         0.0f,    0.8750f,
        0.0f,         0.0f,    0.9375f,
        0.0f,         0.0f,    1.0000f,
        0.0f,    0.0625f,    1.0000f,
        0.0f,    0.1250f,    1.0000f,
        0.0f,    0.1875f,    1.0000f,
        0.0f,    0.2500f,    1.0000f,
        0.0f,    0.3125f,    1.0000f,
        0.0f,    0.3750f,    1.0000f,
        0.0f,    0.4375f,    1.0000f,
        0.0f,    0.5000f,    1.0000f,
        0.0f,    0.5625f,    1.0000f,
        0.0f,    0.6250f,    1.0000f,
        0.0f,    0.6875f,    1.0000f,
        0.0f,    0.7500f,    1.0000f,
        0.0f,    0.8125f,    1.0000f,
        0.0f,    0.8750f,    1.0000f,
        0.0f,    0.9375f,    1.0000f,
        0.0f,    1.0000f,    1.0000f,
        0.0625f,    1.0000f,    0.9375f,
        0.1250f,    1.0000f,    0.8750f,
        0.1875f,    1.0000f,    0.8125f,
        0.2500f,    1.0000f,    0.7500f,
        0.3125f,    1.0000f,    0.6875f,
        0.3750f,    1.0000f,    0.6250f,
        0.4375f,    1.0000f,    0.5625f,
        0.5000f,    1.0000f,    0.5000f,
        0.5625f,    1.0000f,    0.4375f,
        0.6250f,    1.0000f,    0.3750f,
        0.6875f,    1.0000f,    0.3125f,
        0.7500f,    1.0000f,    0.2500f,
        0.8125f,    1.0000f,    0.1875f,
        0.8750f,    1.0000f,    0.1250f,
        0.9375f,    1.0000f,    0.0625f,
        1.0000f,    1.0000f,         0.0f,
        1.0000f,    0.9375f,         0.0f,
        1.0000f,    0.8750f,         0.0f,
        1.0000f,    0.8125f,         0.0f,
        1.0000f,    0.7500f,         0.0f,
        1.0000f,    0.6875f,         0.0f,
        1.0000f,    0.6250f,         0.0f,
        1.0000f,    0.5625f,         0.0f,
        1.0000f,    0.5000f,         0.0f,
        1.0000f,    0.4375f,         0.0f,
        1.0000f,    0.3750f,         0.0f,
        1.0000f,    0.3125f,         0.0f,
        1.0000f,    0.2500f,         0.0f,
        1.0000f,    0.1875f,         0.0f,
        1.0000f,    0.1250f,         0.0f,
        1.0000f,    0.0625f,         0.0f,
        1.0000f,         0.0f,         0.0f,
        0.9375f,         0.0f,         0.0f,
        0.8750f,         0.0f,         0.0f,
        0.8125f,         0.0f,         0.0f,
        0.7500f,         0.0f,         0.0f,
        0.6875f,         0.0f,         0.0f,
        0.6250f,         0.0f,         0.0f,
        0.5625f,         0.0f,         0.0f,
        0.5000f,         0.0f,         0.0f
    };

    float g_colormap_winter[] = {
        0.0f,         0.0f,    1.0000f,
        0.0f,    0.0159f,    0.9921f,
        0.0f,    0.0317f,    0.9841f,
        0.0f,    0.0476f,    0.9762f,
        0.0f,    0.0635f,    0.9683f,
        0.0f,    0.0794f,    0.9603f,
        0.0f,    0.0952f,    0.9524f,
        0.0f,    0.1111f,    0.9444f,
        0.0f,    0.1270f,    0.9365f,
        0.0f,    0.1429f,    0.9286f,
        0.0f,    0.1587f,    0.9206f,
        0.0f,    0.1746f,    0.9127f,
        0.0f,    0.1905f,    0.9048f,
        0.0f,    0.2063f,    0.8968f,
        0.0f,    0.2222f,    0.8889f,
        0.0f,    0.2381f,    0.8810f,
        0.0f,    0.2540f,    0.8730f,
        0.0f,    0.2698f,    0.8651f,
        0.0f,    0.2857f,    0.8571f,
        0.0f,    0.3016f,    0.8492f,
        0.0f,    0.3175f,    0.8413f,
        0.0f,    0.3333f,    0.8333f,
        0.0f,    0.3492f,    0.8254f,
        0.0f,    0.3651f,    0.8175f,
        0.0f,    0.3810f,    0.8095f,
        0.0f,    0.3968f,    0.8016f,
        0.0f,    0.4127f,    0.7937f,
        0.0f,    0.4286f,    0.7857f,
        0.0f,    0.4444f,    0.7778f,
        0.0f,    0.4603f,    0.7698f,
        0.0f,    0.4762f,    0.7619f,
        0.0f,    0.4921f,    0.7540f,
        0.0f,    0.5079f,    0.7460f,
        0.0f,    0.5238f,    0.7381f,
        0.0f,    0.5397f,    0.7302f,
        0.0f,    0.5556f,    0.7222f,
        0.0f,    0.5714f,    0.7143f,
        0.0f,    0.5873f,    0.7063f,
        0.0f,    0.6032f,    0.6984f,
        0.0f,    0.6190f,    0.6905f,
        0.0f,    0.6349f,    0.6825f,
        0.0f,    0.6508f,    0.6746f,
        0.0f,    0.6667f,    0.6667f,
        0.0f,    0.6825f,    0.6587f,
        0.0f,    0.6984f,    0.6508f,
        0.0f,    0.7143f,    0.6429f,
        0.0f,    0.7302f,    0.6349f,
        0.0f,    0.7460f,    0.6270f,
        0.0f,    0.7619f,    0.6190f,
        0.0f,    0.7778f,    0.6111f,
        0.0f,    0.7937f,    0.6032f,
        0.0f,    0.8095f,    0.5952f,
        0.0f,    0.8254f,    0.5873f,
        0.0f,    0.8413f,    0.5794f,
        0.0f,    0.8571f,    0.5714f,
        0.0f,    0.8730f,    0.5635f,
        0.0f,    0.8889f,    0.5556f,
        0.0f,    0.9048f,    0.5476f,
        0.0f,    0.9206f,    0.5397f,
        0.0f,    0.9365f,    0.5317f,
        0.0f,    0.9524f,    0.5238f,
        0.0f,    0.9683f,    0.5159f,
        0.0f,    0.9841f,    0.5079f,
        0.0f,    1.0000f,    0.5000f
    };

    float g_colormap_hsv[] = {
        1.0000f,         0.0f,         0.0f,
        1.0000f,    0.0938f,         0.0f,
        1.0000f,    0.1875f,         0.0f,
        1.0000f,    0.2812f,         0.0f,
        1.0000f,    0.3750f,         0.0f,
        1.0000f,    0.4688f,         0.0f,
        1.0000f,    0.5625f,         0.0f,
        1.0000f,    0.6562f,         0.0f,
        1.0000f,    0.7500f,         0.0f,
        1.0000f,    0.8438f,         0.0f,
        1.0000f,    0.9375f,         0.0f,
        0.9688f,    1.0000f,         0.0f,
        0.8750f,    1.0000f,         0.0f,
        0.7812f,    1.0000f,         0.0f,
        0.6875f,    1.0000f,         0.0f,
        0.5938f,    1.0000f,         0.0f,
        0.5000f,    1.0000f,         0.0f,
        0.4062f,    1.0000f,         0.0f,
        0.3125f,    1.0000f,         0.0f,
        0.2188f,    1.0000f,         0.0f,
        0.1250f,    1.0000f,         0.0f,
        0.0312f,    1.0000f,         0.0f,
        0.0f,    1.0000f,    0.0625f,
        0.0f,    1.0000f,    0.1562f,
        0.0f,    1.0000f,    0.2500f,
        0.0f,    1.0000f,    0.3438f,
        0.0f,    1.0000f,    0.4375f,
        0.0f,    1.0000f,    0.5312f,
        0.0f,    1.0000f,    0.6250f,
        0.0f,    1.0000f,    0.7188f,
        0.0f,    1.0000f,    0.8125f,
        0.0f,    1.0000f,    0.9062f,
        0.0f,    1.0000f,    1.0000f,
        0.0f,    0.9062f,    1.0000f,
        0.0f,    0.8125f,    1.0000f,
        0.0f,    0.7188f,    1.0000f,
        0.0f,    0.6250f,    1.0000f,
        0.0f,    0.5312f,    1.0000f,
        0.0f,    0.4375f,    1.0000f,
        0.0f,    0.3438f,    1.0000f,
        0.0f,    0.2500f,    1.0000f,
        0.0f,    0.1562f,    1.0000f,
        0.0f,    0.0625f,    1.0000f,
        0.0312f,         0.0f,    1.0000f,
        0.1250f,         0.0f,    1.0000f,
        0.2188f,         0.0f,    1.0000f,
        0.3125f,         0.0f,    1.0000f,
        0.4062f,         0.0f,    1.0000f,
        0.5000f,         0.0f,    1.0000f,
        0.5938f,         0.0f,    1.0000f,
        0.6875f,         0.0f,    1.0000f,
        0.7812f,         0.0f,    1.0000f,
        0.8750f,         0.0f,    1.0000f,
        0.9688f,         0.0f,    1.0000f,
        1.0000f,         0.0f,    0.9375f,
        1.0000f,         0.0f,    0.8438f,
        1.0000f,         0.0f,    0.7500f,
        1.0000f,         0.0f,    0.6562f,
        1.0000f,         0.0f,    0.5625f,
        1.0000f,         0.0f,    0.4688f,
        1.0000f,         0.0f,    0.3750f,
        1.0000f,         0.0f,    0.2812f,
        1.0000f,         0.0f,    0.1875f,
        1.0000f,         0.0f,    0.0938f
    };

    float g_colormap_cool[] = {
        0.0f,       1.0000f,    1.0000f,
        0.0159f,    0.9841f,    1.0000f,
        0.0317f,    0.9683f,    1.0000f,
        0.0476f,    0.9524f,    1.0000f,
        0.0635f,    0.9365f,    1.0000f,
        0.0794f,    0.9206f,    1.0000f,
        0.0952f,    0.9048f,    1.0000f,
        0.1111f,    0.8889f,    1.0000f,
        0.1270f,    0.8730f,    1.0000f,
        0.1429f,    0.8571f,    1.0000f,
        0.1587f,    0.8413f,    1.0000f,
        0.1746f,    0.8254f,    1.0000f,
        0.1905f,    0.8095f,    1.0000f,
        0.2063f,    0.7937f,    1.0000f,
        0.2222f,    0.7778f,    1.0000f,
        0.2381f,    0.7619f,    1.0000f,
        0.2540f,    0.7460f,    1.0000f,
        0.2698f,    0.7302f,    1.0000f,
        0.2857f,    0.7143f,    1.0000f,
        0.3016f,    0.6984f,    1.0000f,
        0.3175f,    0.6825f,    1.0000f,
        0.3333f,    0.6667f,    1.0000f,
        0.3492f,    0.6508f,    1.0000f,
        0.3651f,    0.6349f,    1.0000f,
        0.3810f,    0.6190f,    1.0000f,
        0.3968f,    0.6032f,    1.0000f,
        0.4127f,    0.5873f,    1.0000f,
        0.4286f,    0.5714f,    1.0000f,
        0.4444f,    0.5556f,    1.0000f,
        0.4603f,    0.5397f,    1.0000f,
        0.4762f,    0.5238f,    1.0000f,
        0.4921f,    0.5079f,    1.0000f,
        0.5079f,    0.4921f,    1.0000f,
        0.5238f,    0.4762f,    1.0000f,
        0.5397f,    0.4603f,    1.0000f,
        0.5556f,    0.4444f,    1.0000f,
        0.5714f,    0.4286f,    1.0000f,
        0.5873f,    0.4127f,    1.0000f,
        0.6032f,    0.3968f,    1.0000f,
        0.6190f,    0.3810f,    1.0000f,
        0.6349f,    0.3651f,    1.0000f,
        0.6508f,    0.3492f,    1.0000f,
        0.6667f,    0.3333f,    1.0000f,
        0.6825f,    0.3175f,    1.0000f,
        0.6984f,    0.3016f,    1.0000f,
        0.7143f,    0.2857f,    1.0000f,
        0.7302f,    0.2698f,    1.0000f,
        0.7460f,    0.2540f,    1.0000f,
        0.7619f,    0.2381f,    1.0000f,
        0.7778f,    0.2222f,    1.0000f,
        0.7937f,    0.2063f,    1.0000f,
        0.8095f,    0.1905f,    1.0000f,
        0.8254f,    0.1746f,    1.0000f,
        0.8413f,    0.1587f,    1.0000f,
        0.8571f,    0.1429f,    1.0000f,
        0.8730f,    0.1270f,    1.0000f,
        0.8889f,    0.1111f,    1.0000f,
        0.9048f,    0.0952f,    1.0000f,
        0.9206f,    0.0794f,    1.0000f,
        0.9365f,    0.0635f,    1.0000f,
        0.9524f,    0.0476f,    1.0000f,
        0.9683f,    0.0317f,    1.0000f,
        0.9841f,    0.0159f,    1.0000f,
        1.0000f,       0.0f,    1.0000f
    };

}

